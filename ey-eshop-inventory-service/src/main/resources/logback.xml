<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- 定义日志文件 输入位置 -->
    <property name="LOG_DIR" value="./logs/inventory"/>

    <!--单个文件大小,达到会被压缩和切割-->
    <property name="FILESIZE" value="100MB"/>

    <!--日志文件的上限大小 超过删除旧的日志-->
    <property name="TOTALSIZE" value="20GB"/>

    <!--保留周期30天-->
    <property name="MAXHISTORY" value="30"/>

    <timestamp key="DATETIME" datePattern="yyyy-MM-dd HH:mm:ss"/>

    <!-- ConsoleAppender 控制台输出日志 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 对日志进行格式化 -->
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- ERROR级别日志 -->
    <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 RollingFileAppender-->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤器，只记录WARN级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <!--匹配上就接受-->
            <onMatch>ACCEPT</onMatch>
            <!--匹配不上的就拒绝-->
            <onMismatch>DENY</onMismatch>
        </filter>

        <!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责出发滚动 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志输出位置  可相对、和绝对路径 -->
            <fileNamePattern>${LOG_DIR}/%d{yyyy-MM-dd}/error-log.%i.log.gz</fileNamePattern>
            <maxHistory>${MAXHISTORY}</maxHistory>
            <totalSizeCap>${TOTALSIZE}</totalSizeCap>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${FILESIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- WARN级别日志 appender -->
    <appender name="WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤器，只记录WARN级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${LOG_DIR}/%d{yyyy-MM-dd}/warn-log.%i.log.gz</fileNamePattern>
            <maxHistory>${MAXHISTORY}</maxHistory>
            <totalSizeCap>${TOTALSIZE}</totalSizeCap>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${FILESIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- INFO级别日志 appender -->
    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤器，只记录INFO级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${LOG_DIR}/%d{yyyy-MM-dd}/info-log.%i.log.gz</fileNamePattern>
            <maxHistory>${MAXHISTORY}</maxHistory>
            <totalSizeCap>${TOTALSIZE}</totalSizeCap>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${FILESIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- DEBUG级别日志 appender -->
    <appender name="DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤器，只记录DEBUG级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${LOG_DIR}/%d{yyyy-MM-dd}/debug-log.%i.log.gz</fileNamePattern>
            <maxHistory>${MAXHISTORY}</maxHistory>
            <totalSizeCap>${TOTALSIZE}</totalSizeCap>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${FILESIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- TRACE级别日志 appender -->
    <appender name="TRACE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤器，只记录ERROR级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>TRACE</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${LOG_DIR}/%d{yyyy-MM-dd}/trace-log.%i.log.gz</fileNamePattern>
            <maxHistory>${MAXHISTORY}</maxHistory>
            <totalSizeCap>${TOTALSIZE}</totalSizeCap>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${FILESIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--  创建几种 level appender 对应的异步 appender  -->
    <appender name="asyncERROR" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="ERROR"></appender-ref>
    </appender>
    <appender name="asyncINFO" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="INFO"></appender-ref>
    </appender>
    <appender name="asyncWARN" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="WARN"></appender-ref>
    </appender>
    <appender name="asyncDEBUG" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="DEBUG"></appender-ref>
    </appender>
    <appender name="asyncTRACE" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="TRACE"></appender-ref>
    </appender>

    <!-- root级别DEBUG -->
    <root level="INFO">
        <!-- 控制台输出 -->
        <appender-ref ref="STDOUT"/>
        <!-- 文件输出 -->
        <appender-ref ref="asyncERROR"/>
        <appender-ref ref="asyncINFO"/>
        <appender-ref ref="asyncWARN"/>
        <appender-ref ref="asyncDEBUG"/>
        <appender-ref ref="asyncTRACE"/>
    </root>
</configuration>
